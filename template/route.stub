package hanlder

import (
	"net/http"

	"{{AppName}}/{{AppRoot}}/core/cache"
	"{{AppName}}/{{AppRoot}}/core/middleware"
	"gorm.io/gorm"
)

// Setup{{SingularCapitalName}}Routes initializes and returns the HTTP router with {{SingularLowerName}} routes.
func Setup{{SingularCapitalName}}Routes(router *http.ServeMux) *http.ServeMux {

	{{PluralLowerName}}Handler := NewHandler(db, cacheService)
    // {{PluralLowerName}} routes
	router.Handle("GET /{{PluralLowerName}}", middleware.LimiterMiddleware(middleware.Authenticate(http.HandlerFunc({{PluralLowerName}}Handler.Get{{PluralCapitalName}}))))
	router.Handle("POST /{{PluralLowerName}}", middleware.LimiterMiddleware(middleware.Authenticate(http.HandlerFunc({{PluralLowerName}}Handler.Create{{SingularCapitalName}}))))
	router.Handle("GET /{{PluralLowerName}}/{id}", middleware.LimiterMiddleware(middleware.Authenticate(http.HandlerFunc({{PluralLowerName}}Handler.Get{{SingularCapitalName}}))))
	router.Handle("PUT /{{PluralLowerName}}/{id}", middleware.LimiterMiddleware(middleware.Authenticate(http.HandlerFunc({{PluralLowerName}}Handler.Update{{SingularCapitalName}}))))
	router.Handle("DELETE /{{PluralLowerName}}/{id}", middleware.LimiterMiddleware(middleware.Authenticate(http.HandlerFunc({{PluralLowerName}}Handler.Delete{{SingularCapitalName}}))))

	return router
}
